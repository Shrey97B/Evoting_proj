package ProjFrames;

import java.awt.CardLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;

import Services.DBconn;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */
public class Org_dash extends javax.swing.JFrame {

    /**
     * Creates new form Org_dash
     */
    String userid;
    Connection conn;
    CardLayout card;
    public Org_dash(String userid) {
        initComponents();
        this.userid=userid;
        jLabel1.setText("Welcome " + userid);
                card=(CardLayout) mainpanel.getLayout();
                
        try {
            conn=(new DBconn()).getDBconnection();
        } catch (Exception ex) {
            Logger.getLogger(Admin_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpanel = new javax.swing.JPanel();
        pan1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pan2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        idtf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        namtf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        hrcb = new javax.swing.JComboBox<>();
        mincb = new javax.swing.JComboBox<>();
        secb = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        sendb = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        durtf = new javax.swing.JTextField();
        pan3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ustable = new javax.swing.JTable();
        pan4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        elorgtable = new javax.swing.JTable();
        pan5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        electable = new javax.swing.JTable();
        pan6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        myeltable = new javax.swing.JTable();
        pan7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        eloplist = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ellab = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        starlab = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        duralab = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        winbutton = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        status_lab = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        pan8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vottab = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        eleclist = new javax.swing.JList<>();
        jLabel19 = new javax.swing.JLabel();
        selbutton = new javax.swing.JButton();
        grpsel = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        allsel = new javax.swing.JButton();
        allunsel = new javax.swing.JButton();
        pan9 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        vottab2 = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        eleclist2 = new javax.swing.JList<>();
        jLabel21 = new javax.swing.JLabel();
        delbutton = new javax.swing.JButton();
        grpsel2 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        allsel2 = new javax.swing.JButton();
        allunsel2 = new javax.swing.JButton();
        pan10 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        eidlist = new javax.swing.JList<>();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        candtab = new javax.swing.JTable();
        pan11 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        capplist = new javax.swing.JList<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        eidcb = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        appbut = new javax.swing.JButton();
        denbut = new javax.swing.JButton();
        namlabel = new javax.swing.JLabel();
        maillabel = new javax.swing.JLabel();
        mnlabel = new javax.swing.JLabel();
        gridlabel = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel35 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainpanel.setLayout(new java.awt.CardLayout());

        pan1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pan1Layout = new javax.swing.GroupLayout(pan1);
        pan1.setLayout(pan1Layout);
        pan1Layout.setHorizontalGroup(
            pan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
            .addGroup(pan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE))
        );
        pan1Layout.setVerticalGroup(
            pan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 423, Short.MAX_VALUE)
            .addGroup(pan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan1Layout.createSequentialGroup()
                    .addContainerGap(187, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(188, Short.MAX_VALUE)))
        );

        mainpanel.add(pan1, "pan1");

        pan2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ELECTION REQUEST");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Election ID:");

        idtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idtfActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Name:");

        namtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namtfActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Start Date:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Start Time:");

        sendb.setBackground(new java.awt.Color(0, 0, 204));
        sendb.setForeground(new java.awt.Color(255, 255, 255));
        sendb.setText("Send Request");
        sendb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendbActionPerformed(evt);
            }
        });

        jLabel13.setText("Hr");

        jLabel14.setText("min");

        jLabel15.setText("sec");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Duration: (in min)");

        durtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durtfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pan2Layout = new javax.swing.GroupLayout(pan2);
        pan2.setLayout(pan2Layout);
        pan2Layout.setHorizontalGroup(
            pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan2Layout.createSequentialGroup()
                        .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(namtf, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idtf, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan2Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan2Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sendb)
                            .addGroup(pan2Layout.createSequentialGroup()
                                .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(durtf)
                                    .addGroup(pan2Layout.createSequentialGroup()
                                        .addComponent(hrcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(mincb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(secb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15))))))
            .addGroup(pan2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)))
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pan2Layout.setVerticalGroup(
            pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idtf, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namtf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hrcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(mincb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(secb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(19, 19, 19)
                .addGroup(pan2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(durtf))
                .addGap(28, 28, 28)
                .addComponent(sendb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainpanel.add(pan2, "pan2");

        pan3.setBackground(new java.awt.Color(204, 204, 255));
        pan3.setPreferredSize(new java.awt.Dimension(467, 200));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("USER DETAILS");

        ustable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Name", "E-Mail", "Mail", "Mobile number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(ustable);

        javax.swing.GroupLayout pan3Layout = new javax.swing.GroupLayout(pan3);
        pan3.setLayout(pan3Layout);
        pan3Layout.setHorizontalGroup(
            pan3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4)
        );
        pan3Layout.setVerticalGroup(
            pan3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainpanel.add(pan3, "pan3");

        pan4.setBackground(new java.awt.Color(204, 204, 255));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("ELECTION ORGANIZER DETAILS");

        elorgtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(elorgtable);

        javax.swing.GroupLayout pan4Layout = new javax.swing.GroupLayout(pan4);
        pan4.setLayout(pan4Layout);
        pan4Layout.setHorizontalGroup(
            pan4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane5)
        );
        pan4Layout.setVerticalGroup(
            pan4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainpanel.add(pan4, "pan4");

        pan5.setBackground(new java.awt.Color(204, 204, 255));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("ELECTION DETAILS");

        electable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Election ID", "Organizer", "Name", "Start Time", "Duration", "Status", "Winner ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(electable);

        javax.swing.GroupLayout pan5Layout = new javax.swing.GroupLayout(pan5);
        pan5.setLayout(pan5Layout);
        pan5Layout.setHorizontalGroup(
            pan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane6)
        );
        pan5Layout.setVerticalGroup(
            pan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan5Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainpanel.add(pan5, "pan5");

        pan6.setBackground(new java.awt.Color(204, 204, 255));

        jLabel17.setBackground(new java.awt.Color(0, 0, 255));
        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("MY ELECTIONS");

        myeltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Election ID", "Name", "Start Time", "Duration", "Status", "Winner ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(myeltable);

        javax.swing.GroupLayout pan6Layout = new javax.swing.GroupLayout(pan6);
        pan6.setLayout(pan6Layout);
        pan6Layout.setHorizontalGroup(
            pan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane7)
        );
        pan6Layout.setVerticalGroup(
            pan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan6Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainpanel.add(pan6, "pan6");

        pan7.setBackground(new java.awt.Color(204, 204, 255));

        eloplist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        eloplist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                eloplistValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(eloplist);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ELECTION OPERATIONS");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("NAME:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("START TIME:");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("DURATION (in min):");

        jButton3.setBackground(new java.awt.Color(0, 0, 153));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("CANCEL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        winbutton.setBackground(new java.awt.Color(0, 0, 204));
        winbutton.setForeground(new java.awt.Color(255, 255, 255));
        winbutton.setText("SET WINNER");
        winbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winbuttonActionPerformed(evt);
            }
        });

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("STATUS:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("ELECTION ID LIST");

        jButton1.setBackground(new java.awt.Color(0, 0, 204));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("View Candidates");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("View Result");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pan7Layout = new javax.swing.GroupLayout(pan7);
        pan7.setLayout(pan7Layout);
        pan7Layout.setHorizontalGroup(
            pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan7Layout.createSequentialGroup()
                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan7Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pan7Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                                .addGap(142, 142, 142))
                            .addGroup(pan7Layout.createSequentialGroup()
                                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(pan7Layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pan7Layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ellab, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(duralab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(starlab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(status_lab, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(pan7Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(winbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(47, 47, 47)
                        .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        pan7Layout.setVerticalGroup(
            pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ellab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(starlab, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duralab, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status_lab, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(pan7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winbutton)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mainpanel.add(pan7, "pan7");

        pan8.setBackground(new java.awt.Color(204, 204, 255));

        vottab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Name", "E-Mail", "Branch", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(vottab);

        eleclist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        eleclist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                eleclistValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(eleclist);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("SELECT VOTERS");

        selbutton.setBackground(new java.awt.Color(0, 51, 204));
        selbutton.setForeground(new java.awt.Color(255, 255, 255));
        selbutton.setText("Select for voting");
        selbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selbuttonActionPerformed(evt);
            }
        });

        grpsel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All groups", "Computer", "Mechanical", "Electrical", "Electronics", "IT", "IC", "Chemical", "Civil", "Other group" }));
        grpsel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                grpselItemStateChanged(evt);
            }
        });

        jLabel20.setText("Select By Group:");

        allsel.setBackground(new java.awt.Color(0, 51, 204));
        allsel.setForeground(new java.awt.Color(255, 255, 255));
        allsel.setText("Tick All");
        allsel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allselActionPerformed(evt);
            }
        });

        allunsel.setBackground(new java.awt.Color(0, 51, 204));
        allunsel.setForeground(new java.awt.Color(255, 255, 255));
        allunsel.setText("Untick All");
        allunsel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allunselActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pan8Layout = new javax.swing.GroupLayout(pan8);
        pan8.setLayout(pan8Layout);
        pan8Layout.setHorizontalGroup(
            pan8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan8Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pan8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan8Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(selbutton)
                        .addContainerGap())
                    .addGroup(pan8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pan8Layout.createSequentialGroup()
                                .addGroup(pan8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan8Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(grpsel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pan8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(allsel)
                                            .addComponent(allunsel))
                                        .addGap(57, 57, 57)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        pan8Layout.setVerticalGroup(
            pan8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pan8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan8Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(pan8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grpsel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allsel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(allunsel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selbutton)
                .addGap(17, 17, 17))
        );

        mainpanel.add(pan8, "pan8");

        pan9.setBackground(new java.awt.Color(204, 204, 255));
        pan9.setForeground(new java.awt.Color(255, 255, 255));

        vottab2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Name", "E-Mail", "Branch", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(vottab2);

        eleclist2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        eleclist2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                eleclist2ValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(eleclist2);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("DELETE VOTERS");

        delbutton.setBackground(new java.awt.Color(0, 51, 255));
        delbutton.setForeground(new java.awt.Color(255, 255, 255));
        delbutton.setText("Delete from voting");
        delbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delbuttonActionPerformed(evt);
            }
        });

        grpsel2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All groups", "Computer", "Mechanical", "Electrical", "Electronics", "IT", "IC", "Chemical", "Civil", "Other group" }));
        grpsel2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                grpsel2ItemStateChanged(evt);
            }
        });

        jLabel22.setText("Select By Group:");

        allsel2.setBackground(new java.awt.Color(0, 51, 255));
        allsel2.setForeground(new java.awt.Color(255, 255, 255));
        allsel2.setText("Tick All");
        allsel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allsel2ActionPerformed(evt);
            }
        });

        allunsel2.setBackground(new java.awt.Color(0, 51, 255));
        allunsel2.setForeground(new java.awt.Color(255, 255, 255));
        allunsel2.setText("Untick All");
        allunsel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allunsel2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pan9Layout = new javax.swing.GroupLayout(pan9);
        pan9.setLayout(pan9Layout);
        pan9Layout.setHorizontalGroup(
            pan9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan9Layout.createSequentialGroup()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pan9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan9Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(delbutton)
                        .addContainerGap())
                    .addGroup(pan9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pan9Layout.createSequentialGroup()
                                .addGroup(pan9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane8)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan9Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(grpsel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pan9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(allsel2)
                                            .addComponent(allunsel2))
                                        .addGap(57, 57, 57)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        pan9Layout.setVerticalGroup(
            pan9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pan9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan9Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(pan9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grpsel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allsel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(allunsel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(delbutton)
                .addGap(17, 17, 17))
        );

        mainpanel.add(pan9, "pan9");

        pan10.setBackground(new java.awt.Color(204, 204, 255));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("ELECTION ID LIST");

        eidlist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        eidlist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                eidlistValueChanged(evt);
            }
        });
        jScrollPane10.setViewportView(eidlist);

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("CANDIDATE DETAILS");

        candtab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Candidate ID", "Name", "E mail", "Mobile Number", "Group ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(candtab);

        javax.swing.GroupLayout pan10Layout = new javax.swing.GroupLayout(pan10);
        pan10.setLayout(pan10Layout);
        pan10Layout.setHorizontalGroup(
            pan10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan10Layout.createSequentialGroup()
                .addGroup(pan10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11)
                    .addGroup(pan10Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        pan10Layout.setVerticalGroup(
            pan10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan10Layout.createSequentialGroup()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10))
            .addGroup(pan10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mainpanel.add(pan10, "pan10");

        pan11.setBackground(new java.awt.Color(204, 204, 255));

        capplist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        capplist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                capplistValueChanged(evt);
            }
        });
        jScrollPane12.setViewportView(capplist);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("APPROVAL LIST");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("CANDIDATE APPROVALS");

        eidcb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                eidcbItemStateChanged(evt);
            }
        });

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("ELECTION  ID:");

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("NAME:");

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("E-MAIL:");

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("Mobile Number:");

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Group ID:");

        appbut.setBackground(new java.awt.Color(51, 51, 255));
        appbut.setForeground(new java.awt.Color(255, 255, 255));
        appbut.setText("APPROVE");
        appbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appbutActionPerformed(evt);
            }
        });

        denbut.setBackground(new java.awt.Color(51, 51, 255));
        denbut.setForeground(new java.awt.Color(255, 255, 255));
        denbut.setText("DENY");
        denbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denbutActionPerformed(evt);
            }
        });

        jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane13.setViewportView(jTextArea1);

        jLabel35.setText("Message:");

        javax.swing.GroupLayout pan11Layout = new javax.swing.GroupLayout(pan11);
        pan11.setLayout(pan11Layout);
        pan11Layout.setHorizontalGroup(
            pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan11Layout.createSequentialGroup()
                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane12)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan11Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(appbut, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(denbut)
                            .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(namlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(maillabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mnlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(gridlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(59, 59, 59)
                        .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan11Layout.createSequentialGroup()
                        .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pan11Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pan11Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eidcb, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(187, 187, 187)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pan11Layout.setVerticalGroup(
            pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan11Layout.createSequentialGroup()
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12)
                    .addGroup(pan11Layout.createSequentialGroup()
                        .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pan11Layout.createSequentialGroup()
                                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pan11Layout.createSequentialGroup()
                                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(eidcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(namlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(maillabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mnlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pan11Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pan11Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(gridlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(36, 36, 36)
                                .addGroup(pan11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(appbut)
                                    .addComponent(denbut)))
                            .addGroup(pan11Layout.createSequentialGroup()
                                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        mainpanel.add(pan11, "pan11");

        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153), 4));

        jMenu1.setText("Approvals     ");

        jMenuItem2.setText("Election request");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem8.setText("Candidate Approvals");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Details    ");

        jMenuItem3.setText("User details");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Election Organizer");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Election details");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem15.setText("Candidates");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem15);

        jMenuItem9.setText("My Elections");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Election     ");

        jMenuItem7.setText("Election Operation");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem6.setText("Select Voters");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem10.setText("Delete Voters");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Other");

        jMenuItem11.setText("Change Password");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem11);

        jMenuItem14.setText("Provide Feedback");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem14);

        jMenuItem12.setText("Logout");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem12);

        jMenuItem13.setText("Delete Account");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem13);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        card.show(mainpanel,"pan2");
        for(int i=0;i<=23;i++){
        hrcb.addItem(Integer.toString(i));
        }
        for(int i=0;i<=59;i++){
        mincb.addItem(Integer.toString(i));
        secb.addItem(Integer.toString(i));
        }
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        try{
             card.show(mainpanel,"pan3");
            Statement stat= conn.createStatement();
            String quer="SELECT * FROM users";
            ResultSet rs= stat.executeQuery(quer);
            DefaultTableModel tab= (DefaultTableModel) ustable.getModel();
            tab.setRowCount(0);
            String col1="",col2="",col3="",col4="",col5="";
            while(rs.next()){
              col1=rs.getString(1);
              col2=rs.getString(3);
              col3=rs.getString(4);
              col4=rs.getString(5);
              col5=rs.getString(6);
              tab.addRow(new String[]{col1,col2,col3,col4,col5});
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
                try{
            card.show(mainpanel,"pan4");
            Statement stat= conn.createStatement();
            String quer="SELECT * FROM organizacc WHERE designation='organizer'";
            ResultSet rs= stat.executeQuery(quer);
            DefaultTableModel tab= (DefaultTableModel) elorgtable.getModel();
            tab.setRowCount(0);
            String col1="",col2="";
            while(rs.next()){
              col1=rs.getString(1);
              col2=rs.getString(3);
              tab.addRow(new String[]{col1,col2});
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
           try{
            card.show(mainpanel,"pan5");
            Statement stat= conn.createStatement();
            String quer="SELECT * FROM elections";
            ResultSet rs= stat.executeQuery(quer);
            DefaultTableModel tab= (DefaultTableModel) electable.getModel();
            tab.setRowCount(0);
            while(rs.next()){
              String col1=rs.getString(1);
              String col2=rs.getString(2);
              String col3=rs.getString(3);
              String col4=rs.getString(4);
              String col5=rs.getString(5);
              String col7=rs.getString(7);
              String status=rs.getString(6);
              String col6="";
              if(status.equals("b")){
                col6="Upcoming";
              }
              else if(status.equals("r")){
                col6="Ongoing";
              }
              else if(status.equals("u")){
                col6="Result unpublished";
              }
              else{
                col6="Completed";
              }
              tab.addRow(new String[]{col1,col2,col3,col4,col5,col6,col7});
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
                   try{
            card.show(mainpanel,"pan6");
            Statement stat= conn.createStatement();
            String quer="SELECT * FROM electionsapp WHERE organizer=\"" + userid + "\"";
            ResultSet rs= stat.executeQuery(quer);
            DefaultTableModel tab= (DefaultTableModel) myeltable.getModel();
            tab.setRowCount(0);
            while(rs.next()){
              String col1=rs.getString(1);
              String col2=rs.getString(2);
              String col4=rs.getString(4);
              String col5=rs.getString(5);
              tab.addRow(new String[]{col1,col2,col4,col5,"unapproved","null"});
            }
            String quer2="SELECT * FROM elections WHERE organizer=\"" + userid + "\"";
            rs= stat.executeQuery(quer2);
            while(rs.next()){
              String col1=rs.getString(1);
              String col3=rs.getString(3);
              String col4=rs.getString(4);
              String col5=rs.getString(5);
              String col7=rs.getString(7);
              String status=rs.getString(6);
              String col6="";
              if(status.equals("b")){
                col6="Upcoming";
              }
              else if(status.equals("r")){
                col6="Ongoing";
              }
              else if(status.equals("u")){
                col6="Result unpublished";
              }
              else{
                col6="Completed";
              }
              tab.addRow(new String[]{col1,col3,col4,col5,col6,col7});
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        new Chpass(userid,"organizer").setVisible(true);
        
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        new Loginscr().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        card.show(mainpanel,"pan7");
        String str= "SELECT electionid FROM elections WHERE organizer=\"" + userid + "\"";
        DefaultListModel dlm=new DefaultListModel();
        Statement stat=null;
        winbutton.setEnabled(false);
        try {
            stat = conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Admin_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ResultSet rs = stat.executeQuery(str);
            while(rs.next()){
               dlm.addElement(rs.getString(1));
            }
            eloplist.setModel(dlm);
        } catch (SQLException ex) {
            Logger.getLogger(Admin_dash.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void eloplistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_eloplistValueChanged
        // TODO add your handling code here:
        String elecid=eloplist.getSelectedValue();
        String str="SELECT * FROM elections WHERE electionid=\"" + elecid + "\"";
        try {
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery(str);
            String elecname="",status="",start="",dur="";
            while(rs.next()){
              elecname=rs.getString(3);
              start=rs.getString(4);
              dur=rs.getString(5);
              status=rs.getString(6);
            }
            ellab.setText(elecname);
            starlab.setText(start);
            duralab.setText(dur);
            if(status.equals("b")){
                winbutton.setEnabled(false);
                status_lab.setText("Upcoming");
                jButton2.setEnabled(false);
            }
            else if(status.equals("r")){
                winbutton.setEnabled(false);
               status_lab.setText("Ongoing");
               jButton2.setEnabled(false);
            }
            else if(status.equals("u")){
                winbutton.setEnabled(true);
              status_lab.setText("Result Unpublished");
              jButton2.setEnabled(true);
            }
            else{
              winbutton.setEnabled(false);
              status_lab.setText("Completed");
              jButton2.setEnabled(true);
            }
        } catch (SQLException ex) {
         
            Logger.getLogger(Admin_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_eloplistValueChanged

    private void idtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idtfActionPerformed

    private void namtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namtfActionPerformed

    private void sendbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendbActionPerformed
        String id1=idtf.getText();
        String name=namtf.getText();
        String durat=durtf.getText();
        java.util.Date utild=jDateChooser1.getDate();
        String h= (String) hrcb.getSelectedItem();
        String m= (String) mincb.getSelectedItem();
        String sec=(String) secb.getSelectedItem();
        if(id1.equals("") || name.equals("") || durat.equals("") || utild==null || h.equals("") || m.equals("") || sec.equals("")){
          JOptionPane.showMessageDialog(this,"One or more field/s may be empty");
          idtf.setText("");
          namtf.setText("");
          durtf.setText("");
          return;
        }
        java.sql.Date sqld=new java.sql.Date(utild.getTime());
        int hours=Integer.parseInt(h);
        int minutes=Integer.parseInt(m);
        int seconds=Integer.parseInt(sec);
        String strdatetime=sqld.toString()+" "+hours+":"+minutes+":"+seconds;
        System.out.println(strdatetime);
        DateFormat dateformat=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        java.util.Date dt = null;
        try {
            dt = dateformat.parse(strdatetime);
        } catch (ParseException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
        String q1="SELECT electionid FROM elections";
        try {
            Statement stat1=conn.createStatement();
            ResultSet rs1=stat1.executeQuery(q1);
            while(rs1.next()){
               if(rs1.getString(1).equals(id1)){
                 JOptionPane.showMessageDialog(this,"This ElectionID already exists.\nPlease choose another electionid");
                 return;
               }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
  
        Timestamp ts=new Timestamp(dt.getTime());
        PreparedStatement stmt=null; 
        try {
            stmt = conn.prepareStatement("insert into electionsapp values(?,?,?,?,?,'p')");
            stmt.setString(1,id1);
            stmt.setString(2, name);
            stmt.setString(3,userid);
            stmt.setTimestamp(4, ts);
            stmt.setString(5, durat);
            int in=stmt.executeUpdate();
            JOptionPane.showMessageDialog(this,"The request for election has been made");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"This ElectionID already exists.\nPlease choose another electionid");
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }//GEN-LAST:event_sendbActionPerformed

    private void durtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durtfActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        try {
            // TODO add your handling code here:
            card.show(mainpanel, "pan10");
            String quer="SELECT electionid FROM elections WHERE organizer='" + userid + "'";
            DefaultListModel dlm=new DefaultListModel();
            DefaultTableModel tab=(DefaultTableModel) candtab.getModel();
            tab.setRowCount(0);
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery(quer);
            while(rs.next()){
              dlm.addElement(rs.getString(1));
            }
            eidlist.setModel(dlm);
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        new Feedback(userid,"organizer").setVisible(true);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        try {
            // TODO add your handling code here:
            card.show(mainpanel,"pan8");
            Statement stat=conn.createStatement();
            String query="SELECT electionid FROM elections WHERE election_stat='b' AND organizer='" + userid + "'";
            ResultSet rs=stat.executeQuery(query);
            
            DefaultTableModel tab= (DefaultTableModel) vottab.getModel();
            tab.setRowCount(0);
            DefaultListModel dlm= new DefaultListModel();
            while(rs.next()){
              dlm.addElement(rs.getString(1));
            }
            eleclist.setModel(dlm);
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void eleclistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_eleclistValueChanged

        try {
            // TODO add your handling code here:
            String elecid=eleclist.getSelectedValue();
            if(elecid!=null){
            Statement stat=conn.createStatement();
            String query="SELECT * FROM users WHERE NOT EXISTS (SELECT * FROM voters WHERE voters.election_id='" + elecid + "' AND voters.userid=users.userid)";
            ResultSet rs=stat.executeQuery(query);
            DefaultTableModel vt= (DefaultTableModel) vottab.getModel();
            vt.setRowCount(0);
            
            while(rs.next()){
               
               Object obj[]=new Object[5];
               obj[0]=rs.getString(1);
               obj[1]=rs.getString(3);
               obj[2]=rs.getString(4);
               obj[3]=rs.getString(5);
               obj[4]=Boolean.FALSE;
               vt.addRow(obj);
               
            }
            grpsel.setSelectedIndex(0);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_eleclistValueChanged

    private void grpselItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_grpselItemStateChanged
        // TODO add your handling code here:
        try{
            String elecid=eleclist.getSelectedValue();
            Statement stat=conn.createStatement();
            String query="";
            if(grpsel.getSelectedItem().equals("All groups")){
             query="SELECT * FROM users WHERE NOT EXISTS (SELECT * FROM voters WHERE voters.election_id='" + elecid + "' AND voters.userid=users.userid)";
            }
            else{
             query="SELECT * FROM users WHERE users.groupid='" + grpsel.getSelectedItem() + "' AND NOT EXISTS (SELECT * FROM voters WHERE voters.election_id='" + elecid + "' AND voters.userid=users.userid)";
            }
            ResultSet rs=stat.executeQuery(query);
            DefaultTableModel vt= (DefaultTableModel) vottab.getModel();
            vt.setRowCount(0);
            while(rs.next()){
               
               Object obj[]=new Object[5];
               obj[0]=rs.getString(1);
               obj[1]=rs.getString(3);
               obj[2]=rs.getString(4);
               obj[3]=rs.getString(5);
               obj[4]=Boolean.FALSE;
               vt.addRow(obj);
               
            }
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_grpselItemStateChanged

    private void allselActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allselActionPerformed
        // TODO add your handling code here:
        DefaultTableModel vt= (DefaultTableModel) vottab.getModel();
        for(int i=0;i<vt.getRowCount();i++){
          vt.setValueAt(Boolean.TRUE, i, 4);
        }
    }//GEN-LAST:event_allselActionPerformed

    private void allunselActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allunselActionPerformed
        // TODO add your handling code here:
        DefaultTableModel vt= (DefaultTableModel) vottab.getModel();
        for(int i=0;i<vt.getRowCount();i++){
          vt.setValueAt(Boolean.FALSE, i, 4);
        }
    }//GEN-LAST:event_allunselActionPerformed

    private void selbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selbuttonActionPerformed
        // TODO add your handling code here:
        String electionid=eleclist.getSelectedValue();
        DefaultTableModel vt= (DefaultTableModel) vottab.getModel();
        for(int i=0;i<vt.getRowCount();i++){
            if(vt.getValueAt(i,4)==Boolean.TRUE){
                try {
                    String ins="insert into voters values(?,?,'n','null','n')";
                    PreparedStatement stmt=conn.prepareStatement(ins);
                    stmt.setString(1,electionid); 
                    stmt.setString(2,(String)vt.getValueAt(i,0));
                    stmt.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        int count=vt.getRowCount();
        int index=0;
         for(int i=0;i<count;i++){
            if(vt.getValueAt(index,4)==Boolean.TRUE){
                vt.removeRow(index);
            }
            else{
              index++;
            }
         }
    }//GEN-LAST:event_selbuttonActionPerformed

    private void eleclist2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_eleclist2ValueChanged
        // TODO add your handling code here:
                try {
            // TODO add your handling code here:
            
            String elecid=eleclist2.getSelectedValue();
            if(elecid!=null){
            Statement stat=conn.createStatement();
            String query="SELECT * FROM users WHERE EXISTS (SELECT * FROM voters WHERE voters.election_id='" + elecid + "' AND voters.userid=users.userid)";
            ResultSet rs=stat.executeQuery(query);
            DefaultTableModel vt= (DefaultTableModel) vottab2.getModel();
            vt.setRowCount(0);
            while(rs.next()){
               
               Object obj[]=new Object[5];
               obj[0]=rs.getString(1);
               obj[1]=rs.getString(3);
               obj[2]=rs.getString(4);
               obj[3]=rs.getString(5);
               obj[4]=Boolean.FALSE;
               vt.addRow(obj);
               
            }
            grpsel2.setSelectedIndex(0);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_eleclist2ValueChanged

    private void delbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delbuttonActionPerformed
        // TODO add your handling code here:
        String electionid=eleclist2.getSelectedValue();
        DefaultTableModel vt= (DefaultTableModel) vottab2.getModel();
        for(int i=0;i<vt.getRowCount();i++){
            if(vt.getValueAt(i,4)==Boolean.TRUE){
                try {
                    Statement stat=conn.createStatement();
                    String del= "DELETE FROM voters WHERE election_id='" + electionid + "' AND userid='" + vt.getValueAt(i,0) + "'";
                    stat.executeUpdate(del);
              
                } catch (SQLException ex) {
                    Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
                }
                 
            }
        }
        int count=vt.getRowCount();
        int index=0;
         for(int i=0;i<count;i++){
            if(vt.getValueAt(index,4)==Boolean.TRUE){
                vt.removeRow(index);
            }
            else{
              index++;
            }
         }
    }//GEN-LAST:event_delbuttonActionPerformed

    private void grpsel2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_grpsel2ItemStateChanged
        // TODO add your handling code here:
            try{
            String elecid=eleclist2.getSelectedValue();
            Statement stat=conn.createStatement();
            String query="";
            if(grpsel2.getSelectedItem().equals("All groups")){
             query="SELECT * FROM users WHERE EXISTS (SELECT * FROM voters WHERE voters.election_id='" + elecid + "' AND voters.userid=users.userid)";
            }
            else{
             query="SELECT * FROM users WHERE users.groupid='" + grpsel2.getSelectedItem() + "' AND EXISTS (SELECT * FROM voters WHERE voters.election_id='" + elecid + "' AND voters.userid=users.userid)";
            }
            ResultSet rs=stat.executeQuery(query);
            DefaultTableModel vt= (DefaultTableModel) vottab2.getModel();
            vt.setRowCount(0);
            while(rs.next()){
               
               Object obj[]=new Object[5];
               obj[0]=rs.getString(1);
               obj[1]=rs.getString(3);
               obj[2]=rs.getString(4);
               obj[3]=rs.getString(5);
               obj[4]=Boolean.FALSE;
               vt.addRow(obj);
               
            }
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_grpsel2ItemStateChanged

    private void allsel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allsel2ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel vt= (DefaultTableModel) vottab2.getModel();
        for(int i=0;i<vt.getRowCount();i++){
          vt.setValueAt(Boolean.TRUE, i, 4);
        }
    }//GEN-LAST:event_allsel2ActionPerformed

    private void allunsel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allunsel2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel vt= (DefaultTableModel) vottab2.getModel();
        for(int i=0;i<vt.getRowCount();i++){
          vt.setValueAt(Boolean.FALSE, i, 4);
        }
    }//GEN-LAST:event_allunsel2ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
                try {
            // TODO add your handling code here:
            card.show(mainpanel,"pan9");
            Statement stat=conn.createStatement();
            String query="SELECT electionid FROM elections WHERE election_stat='b' AND organizer='" + userid + "'";
            ResultSet rs=stat.executeQuery(query);
            DefaultTableModel tab=(DefaultTableModel) vottab2.getModel();
            tab.setRowCount(0);
            DefaultListModel dlm= new DefaultListModel();
            while(rs.next()){
              dlm.addElement(rs.getString(1));
            }
            eleclist2.setModel(dlm);
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void eidlistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_eidlistValueChanged
        try {
            // TODO add your handling code here:
            String eid=eidlist.getSelectedValue();
            DefaultTableModel tab= (DefaultTableModel) candtab.getModel();
            tab.setRowCount(0);
            String quer="SELECT * FROM users INNER JOIN elecvotes ON users.userid=elecvotes.cand_id WHERE elecvotes.electionid='"+eid+"'";
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery(quer);
            String col1,col2,col3,col4,col5;
            while(rs.next()){
              col1=rs.getString(1);
              col2=rs.getString(3);
              col3=rs.getString(4);
              col4=rs.getString(6);
              col5=rs.getString(5);
              tab.addRow(new String[]{col1,col2,col3,col4,col5});
            }
            
                    
            } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_eidlistValueChanged

    private void appbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appbutActionPerformed
        // TODO add your handling code here:
        String candid=capplist.getSelectedValue();
        String elecid=(String) eidcb.getSelectedItem();
        if(candid==null){
        JOptionPane.showMessageDialog(this,"No Candidate Selected");
        }
        else if(elecid==null){
           JOptionPane.showMessageDialog(this,"No Election Selected");
        }
        else{
            try {
                String ins= "INSERT INTO elecvotes values(?,?,0)";
                PreparedStatement stmt=conn.prepareStatement(ins);
                stmt.setString(1,elecid);
                stmt.setString(2,candid);
                stmt.executeUpdate();
                String del="UPDATE candapp SET status='a' WHERE electionid='" + elecid + "' AND userid='" + candid + "'" ;
                Statement stat=conn.createStatement();
                stat.executeUpdate(del);

                DefaultListModel dlm=(DefaultListModel) capplist.getModel();
                dlm.removeElement(candid);
                capplist.setModel(dlm);
                
                namlabel.setText("");
                maillabel.setText("");
                mnlabel.setText("");
                gridlabel.setText("");
                jTextArea1.setText("");
                jLabel34.setIcon(null);
            } catch (SQLException ex) {
                Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
            }
 
        }
    }//GEN-LAST:event_appbutActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        try {
            // TODO add your handling code here:
            card.show(mainpanel,"pan11");
            DefaultListModel dlm=new DefaultListModel();
             capplist.setModel(dlm);
            String quer1="SELECT electionid FROM elections WHERE organizer='" + userid + "' AND election_stat='b'";
            Statement stat=conn.createStatement();
            ResultSet rs= stat.executeQuery(quer1);
            eidcb.removeAllItems();
            while(rs.next()){
              eidcb.addItem(rs.getString(1));
            }
             
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void eidcbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_eidcbItemStateChanged
        try {
            // TODO add your handling code here:
            
            String electid=(String) eidcb.getSelectedItem();
            DefaultListModel dlm=new DefaultListModel();
            String quer1="SELECT userid from candapp WHERE electionid='" + electid + "' AND status='p'";
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery(quer1);
            while(rs.next()){
                dlm.addElement(rs.getString(1));
            }
            capplist.setModel(dlm);
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_eidcbItemStateChanged

    private void capplistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_capplistValueChanged
        try {
            // TODO add your handling code here:
            String candid=capplist.getSelectedValue();
            if(candid!=null){
            String quer1="SELECT * FROM users WHERE userid='" + candid + "'";
            Statement stat=conn.createStatement();
            ResultSet rs=stat.executeQuery(quer1);
            while(rs.next()){
               namlabel.setText(rs.getString(3));
               maillabel.setText(rs.getString(4));
               mnlabel.setText(rs.getString(6));
               gridlabel.setText(rs.getString(5));
            }
            String quer2="SELECT candphoto,candmsg FROM candapp WHERE electionid='" + eidcb.getSelectedItem() + "' AND userid='" + candid + "'";
            Statement stat2=conn.createStatement();
            ResultSet rs2=stat2.executeQuery(quer2);
            InputStream in=null;
            if(rs2.next()){
              in=rs2.getBinaryStream(1);
              jTextArea1.setText(rs2.getString(2));
            }
            
            int i=0;
            File f1=new File("test"+i+".jpg");
            OutputStream f = null;
            try {
                f = new FileOutputStream(f1);
            
             i++;
            int c = 0;
                while ((c = in.read()) > -1) {
                    f.write(c);
                }
             
                Image originalImage = ImageIO.read(f1);
		 String path=f1.getAbsolutePath();
		ImageIcon resizeImageJpg = ResizeImage(path);
		//ImageIO.write(resizeImageJpg, "jpg", f1);
                
                jLabel34.setIcon(resizeImageJpg);
              
            
            } catch (IOException ex) {
                Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_capplistValueChanged

        public ImageIcon ResizeImage(String ImagePath){
      ImageIcon myImage= new ImageIcon(ImagePath);
      Image img=myImage.getImage();
      Image newimg= img.getScaledInstance(jLabel34.getWidth(), jLabel34.getHeight(), Image.SCALE_SMOOTH);
      ImageIcon image=new ImageIcon(newimg);
      return image;
    }
    private void denbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_denbutActionPerformed
        // TODO add your handling code here:
        String candid=capplist.getSelectedValue();
        String elecid=(String) eidcb.getSelectedItem();
        if(candid==null){
        JOptionPane.showMessageDialog(this,"No Candidate Selected");
        }
        else if(elecid==null){
           JOptionPane.showMessageDialog(this,"No Election Selected");
        }
        else{
            try {
                String del="DELETE FROM candapp WHERE electionid='" + elecid + "' AND userid='" + candid + "'";
                Statement stat=conn.createStatement();
                stat.executeUpdate(del);
                DefaultListModel dlm=(DefaultListModel) capplist.getModel();
                dlm.removeElement(candid);
                capplist.setModel(dlm);
                namlabel.setText("");
                maillabel.setText("");
                mnlabel.setText("");
                gridlabel.setText("");
                jLabel34.setIcon(null);
            } catch (SQLException ex) {
                Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
            }
 
        }
    }//GEN-LAST:event_denbutActionPerformed

    private void winbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winbuttonActionPerformed
        // TODO add your handling code here:
         String elid=eloplist.getSelectedValue();
         card.show(mainpanel,"pan1");
         new setWinner(elid).setVisible(true);
    }//GEN-LAST:event_winbuttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       String elecid=eloplist.getSelectedValue();
       if(elecid==null){
         JOptionPane.showMessageDialog(this,"No election selected");
       }
       else{
        new CandDetails(userid,elecid,"organizer").setVisible(true);
        this.dispose();
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String elecid=eloplist.getSelectedValue();
        int val = JOptionPane.showConfirmDialog(this,"Do you really want to cancel this election?");
        System.out.println(val);
        if(val==0){
           String del1="DELETE FROM candapp WHERE electionid='" + elecid + "'";
           String del2="DELETE FROM elecvotes WHERE electionid='" + elecid + "'";
           String del3="DELETE FROM voters WHERE election_id='" + elecid + "'";
           String del4="DELETE FROM elections WHERE electionid='" + elecid + "'";
            try {
                Statement stat=conn.createStatement();
                stat.executeUpdate(del1);
                 stat.executeUpdate(del2);
                  stat.executeUpdate(del3);
                   stat.executeUpdate(del4);
                DefaultListModel dlm=(DefaultListModel) eloplist.getModel();
                dlm.removeElement(elecid);
                eloplist.setModel(dlm);
            } catch (SQLException ex) {
                Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
        int val = JOptionPane.showConfirmDialog(this,"Do you really want to delete your account?");
        System.out.println(val);
        if(val==0){
           String del1="DELETE candapp FROM candapp INNER JOIN elections ON elections.electionid=candapp.electionid WHERE elections.organizer='" + userid + "'";
           String del2="DELETE elecvotes FROM elecvotes INNER JOIN elections ON elections.electionid=elecvotes.electionid WHERE elections.organizer='" + userid + "'";
           String del3="DELETE voters FROM voters INNER JOIN elections ON elections.electionid=voters.election_id WHERE elections.organizer='" + userid + "'";
           String del4="DELETE FROM electionsapp WHERE organizer='" + userid + "'";
           String del5="DELETE FROM elections WHERE organizer='" + userid + "'";
           String del6="DELETE FROM organizacc WHERE userid='" + userid + "'";
            try {
                Statement stat=conn.createStatement();
                stat.executeUpdate(del1);
                 stat.executeUpdate(del2);
                  stat.executeUpdate(del3);
                   stat.executeUpdate(del4);
                stat.executeUpdate(del5);
                stat.executeUpdate(del6);
                new homescr().setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                Logger.getLogger(Org_dash.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String eid= eloplist.getSelectedValue();
        new ResultFrame(eid,status_lab.getText()).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Org_dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Org_dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Org_dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Org_dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allsel;
    private javax.swing.JButton allsel2;
    private javax.swing.JButton allunsel;
    private javax.swing.JButton allunsel2;
    private javax.swing.JButton appbut;
    private javax.swing.JTable candtab;
    private javax.swing.JList<String> capplist;
    private javax.swing.JButton delbutton;
    private javax.swing.JButton denbut;
    private javax.swing.JLabel duralab;
    private javax.swing.JTextField durtf;
    private javax.swing.JComboBox<String> eidcb;
    private javax.swing.JList<String> eidlist;
    private javax.swing.JList<String> eleclist;
    private javax.swing.JList<String> eleclist2;
    private javax.swing.JTable electable;
    private javax.swing.JLabel ellab;
    private javax.swing.JList<String> eloplist;
    private javax.swing.JTable elorgtable;
    private javax.swing.JLabel gridlabel;
    private javax.swing.JComboBox<String> grpsel;
    private javax.swing.JComboBox<String> grpsel2;
    private javax.swing.JComboBox<String> hrcb;
    private javax.swing.JTextField idtf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel maillabel;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JComboBox<String> mincb;
    private javax.swing.JLabel mnlabel;
    private javax.swing.JTable myeltable;
    private javax.swing.JLabel namlabel;
    private javax.swing.JTextField namtf;
    private javax.swing.JPanel pan1;
    private javax.swing.JPanel pan10;
    private javax.swing.JPanel pan11;
    private javax.swing.JPanel pan2;
    private javax.swing.JPanel pan3;
    private javax.swing.JPanel pan4;
    private javax.swing.JPanel pan5;
    private javax.swing.JPanel pan6;
    private javax.swing.JPanel pan7;
    private javax.swing.JPanel pan8;
    private javax.swing.JPanel pan9;
    private javax.swing.JComboBox<String> secb;
    private javax.swing.JButton selbutton;
    private javax.swing.JButton sendb;
    private javax.swing.JLabel starlab;
    private javax.swing.JLabel status_lab;
    private javax.swing.JTable ustable;
    private javax.swing.JTable vottab;
    private javax.swing.JTable vottab2;
    private javax.swing.JButton winbutton;
    // End of variables declaration//GEN-END:variables
}
